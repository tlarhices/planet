planet.py:        def afficheTexte(self, texte, parametres, type="normal", forceRefresh=False):
planet.py:    general.planete.afficheTexte("Supression de la planète du menu : %(nom)s", parametres={"nom":general.tmp.nom})
librairies/ai.py:          general.planete.afficheTexte("Création du graphe de déplacement... %(a)i/%(b)i", parametres={"a": cpt, "b": totclef}, type="ai")
librairies/ai.py:    general.interface.afficheTexte("Impossible de trouver une trajectoire pour aller de %(a)s à %(b)s."+, parametres={"a": deb, "b":fin}, type="avertissement")
librairies/cartographie.py:      general.planete.afficheTexte("Rendu de la heightmap : %.2f%%" %((cpt*1.0)/len(listeElements)*100))
librairies/cartographie.py:            general.planete.afficheTexte("Rendu de la minimap : %.2f%%" %((compte*1.0)/len(listeElements)*100))
librairies/geoide.py:          general.planete.afficheTexte("Calcul du voisinage... %(a)i/%(b)i", parametres={"a":sommet, "b":totSommets}, type="construction")
librairies/geoide.py:            general.planete.afficheTexte("Tesselation en cours... %(a)i/%(b)i::%(c)i/%(d)i", parametres={"a": i+1, "b": self.tesselation, "c": cpt, "d": tot}, type="construction")
librairies/geoide.py:          general.planete.afficheTexte("Perturbation de la surface... %(a)i/%(b)i", parametres={"a": i, "b": totlen}, type="construction")
librairies/geoide.py:      general.planete.afficheTexte("Normalisation...", parametres={}, type="construction")
librairies/geoide.py:          general.planete.afficheTexte("Normalisation... %(a)i/%(b)i", parametres={"a": i, "b": totlen}, type="construction")
librairies/geoide.py:          general.planete.afficheTexte("Flouification... %(a)i/%(b)i", parametres={"a": cpt, "b": totclefs}, type="construction")
librairies/geoide.py:        general.planete.afficheTexte("Création du modèle... %(a)i/%(b)i", parametres={"a": i, "b": totlen}, type="construction")
librairies/geoide.py:        general.planete.afficheTexte("Ajout de la végétation : %(f).2f%%", parametres={"f": (compte*1.0)/len(self.sommets)*100}, type="construction")
librairies/geoide.py:          general.planete.afficheTexte("Parsage des infos... %(a)i/%(b)i", parametres={"a": i, "b": tot}, type="sauvegarde")
librairies/geoide.py:        general.planete.afficheTexte("Création des vectrices : %(a).2f%%", parametres={"a":(cpt*1.0)/len(self.sommets)*100}, type="construction")
librairies/gui.py:  def afficheTexte(self, texte, parametres, type="normal", forceRefresh=False):
librairies/inout.py:            general.interface.afficheTexte("Clic sur le sprite : "+str(objet.getPythonTag('id'))+" cliquez sur le sol où vous voulez qu'il aille", "info")
librairies/inout.py:            general.interface.afficheTexte("clic dans l'eau", "info")
librairies/inout.py:          general.interface.afficheTexte("Clic sur un objet au tag inconnu : "+str(objet.getPythonTag('type')), "info")
librairies/joueur.py:    #general.interface.afficheTexte("Joueur "+self.nom+" dit : :'( :'( pauvre "+sprite.id, "chat")
librairies/planete.py:  def afficheTexte(self, texte, parametres, type=None):
librairies/planete.py:    general.interface.afficheTexte(texte=texte, parametres=parametres, type=type, forceRefresh=True)
librairies/planete.py:    self.afficheTexte("Sauvegarde en cours...", parametres={}, type="sauvegarde")
librairies/planete.py:    self.afficheTexte("Sauvegarde terminée", parametres={}, type="sauvegarde")
librairies/planete.py:    self.afficheTexte("Chargement en cours...", parametres={}, type="sauvegarde")
librairies/planete.py:      self.afficheTexte("Lecture du fichier...", parametres={}, type="sauvegarde")
librairies/planete.py:      self.afficheTexte("Parsage des infos...", parametres={}, type="sauvegarde")
librairies/planete.py:          self.afficheTexte("Parsage des infos... %{a}i/%{b}i", parametres={"a":i, "b":tot}, type="sauvegarde")
librairies/planete.py:    self.afficheTexte("Chargement terminé", parametres={}, type="sauvegarde")
librairies/planete.py:      self.afficheTexte("Sauvegarde automatique en cours...", parametres={}, type="sauvegarde")
librairies/sprite.py:    #general.planete.afficheTexte(self.id+" marche vers "+str(cible))
librairies/sprite.py:      general.interface.afficheTexte(self.id+" est mort par "+type, "mort")
